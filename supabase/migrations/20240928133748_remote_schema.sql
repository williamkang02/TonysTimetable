

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."ClassType" AS ENUM (
    'LECTURE',
    'TUTORIAL'
);


ALTER TYPE "public"."ClassType" OWNER TO "postgres";


CREATE TYPE "public"."Semester" AS ENUM (
    'ONE',
    'TWO'
);


ALTER TYPE "public"."Semester" OWNER TO "postgres";


CREATE TYPE "public"."UserType" AS ENUM (
    'STUDENT',
    'STAFF',
    'ADMIN'
);


ALTER TYPE "public"."UserType" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
  INSERT INTO Users (id, email, created_at, password, user_type)
  VALUES (NEW.id, NEW.email, now(), password, 'password', STUDENT);
  RETURN NEW;
END;
$$;


ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."Campuses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL
);


ALTER TABLE "public"."Campuses" OWNER TO "postgres";


ALTER TABLE "public"."Campuses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Campuses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Classes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "class_type" "public"."ClassType" NOT NULL,
    "is_online" boolean DEFAULT false NOT NULL,
    "subject_id" bigint NOT NULL,
    "location_id" bigint,
    "start_time" smallint,
    "end_time" smallint,
    "staff_id" bigint,
    CONSTRAINT "Classes_end_time_check" CHECK (((0 <= "end_time") AND ("end_time" < 225))),
    CONSTRAINT "Classes_time_check" CHECK (((0 <= "start_time") AND ("start_time" < 225)))
);


ALTER TABLE "public"."Classes" OWNER TO "postgres";


ALTER TABLE "public"."Classes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Classes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Courses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "campus_id" bigint NOT NULL
);


ALTER TABLE "public"."Courses" OWNER TO "postgres";


ALTER TABLE "public"."Courses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Courses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Locations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "capacity" bigint DEFAULT '0'::bigint NOT NULL,
    "class_type" "public"."ClassType" NOT NULL,
    "campus_id" bigint NOT NULL
);


ALTER TABLE "public"."Locations" OWNER TO "postgres";


ALTER TABLE "public"."Locations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Locations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Staff" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "university_email" character varying NOT NULL
);


ALTER TABLE "public"."Staff" OWNER TO "postgres";


ALTER TABLE "public"."Staff" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Staff_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."StudentSubject" (
    "student_id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "subject_id" bigint NOT NULL
);


ALTER TABLE "public"."StudentSubject" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."Students" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying NOT NULL,
    "university_email" character varying NOT NULL,
    "personal_email" character varying,
    "course_id" bigint NOT NULL
);


ALTER TABLE "public"."Students" OWNER TO "postgres";


ALTER TABLE "public"."Students" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Students_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Subjects" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "code" character varying NOT NULL,
    "name" character varying NOT NULL,
    "year" bigint NOT NULL,
    "course_id" bigint NOT NULL,
    "semester" "public"."Semester" NOT NULL
);


ALTER TABLE "public"."Subjects" OWNER TO "postgres";


ALTER TABLE "public"."Subjects" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Subjects_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Users" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "password" character varying NOT NULL,
    "email" character varying NOT NULL,
    "user_type" "public"."UserType" NOT NULL,
    "mfa_secret" character varying
);


ALTER TABLE "public"."Users" OWNER TO "postgres";


ALTER TABLE "public"."Users" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Users_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."Campuses"
    ADD CONSTRAINT "Campuses_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Campuses"
    ADD CONSTRAINT "Campuses_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."Campuses"
    ADD CONSTRAINT "Campuses_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Classes"
    ADD CONSTRAINT "Classes_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Classes"
    ADD CONSTRAINT "Classes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Courses"
    ADD CONSTRAINT "Courses_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Courses"
    ADD CONSTRAINT "Courses_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."Courses"
    ADD CONSTRAINT "Courses_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Locations"
    ADD CONSTRAINT "Locations_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Locations"
    ADD CONSTRAINT "Locations_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."Locations"
    ADD CONSTRAINT "Locations_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Staff"
    ADD CONSTRAINT "Staff_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Staff"
    ADD CONSTRAINT "Staff_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Staff"
    ADD CONSTRAINT "Staff_university_email_key" UNIQUE ("university_email");



ALTER TABLE ONLY "public"."StudentSubject"
    ADD CONSTRAINT "StudentSubject_pkey" PRIMARY KEY ("student_id", "subject_id");



ALTER TABLE ONLY "public"."Students"
    ADD CONSTRAINT "Students_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Students"
    ADD CONSTRAINT "Students_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Students"
    ADD CONSTRAINT "Students_university_email_key" UNIQUE ("university_email");



ALTER TABLE ONLY "public"."Subjects"
    ADD CONSTRAINT "Subjects_code_key" UNIQUE ("code");



ALTER TABLE ONLY "public"."Subjects"
    ADD CONSTRAINT "Subjects_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Subjects"
    ADD CONSTRAINT "Subjects_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Users"
    ADD CONSTRAINT "Users_email_key" UNIQUE ("email");



ALTER TABLE ONLY "public"."Users"
    ADD CONSTRAINT "Users_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."Users"
    ADD CONSTRAINT "Users_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Classes"
    ADD CONSTRAINT "Classes_location_id_fkey" FOREIGN KEY ("location_id") REFERENCES "public"."Locations"("id");



ALTER TABLE ONLY "public"."Classes"
    ADD CONSTRAINT "Classes_staff_id_fkey" FOREIGN KEY ("staff_id") REFERENCES "public"."Staff"("id");



ALTER TABLE ONLY "public"."Classes"
    ADD CONSTRAINT "Classes_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."Subjects"("id");



ALTER TABLE ONLY "public"."Courses"
    ADD CONSTRAINT "Courses_campus_id_fkey" FOREIGN KEY ("campus_id") REFERENCES "public"."Campuses"("id");



ALTER TABLE ONLY "public"."Locations"
    ADD CONSTRAINT "Locations_campus_id_fkey" FOREIGN KEY ("campus_id") REFERENCES "public"."Campuses"("id");



ALTER TABLE ONLY "public"."StudentSubject"
    ADD CONSTRAINT "StudentSubject_student_id_fkey" FOREIGN KEY ("student_id") REFERENCES "public"."Students"("id");



ALTER TABLE ONLY "public"."StudentSubject"
    ADD CONSTRAINT "StudentSubject_subject_id_fkey" FOREIGN KEY ("subject_id") REFERENCES "public"."Subjects"("id");



ALTER TABLE ONLY "public"."Students"
    ADD CONSTRAINT "Students_course_id_fkey" FOREIGN KEY ("course_id") REFERENCES "public"."Courses"("id");



ALTER TABLE ONLY "public"."Subjects"
    ADD CONSTRAINT "Subjects_course_id_fkey" FOREIGN KEY ("course_id") REFERENCES "public"."Courses"("id");



ALTER TABLE "public"."StudentSubject" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
































































































































































































GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";





















GRANT ALL ON TABLE "public"."Campuses" TO "anon";
GRANT ALL ON TABLE "public"."Campuses" TO "authenticated";
GRANT ALL ON TABLE "public"."Campuses" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Campuses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Campuses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Campuses_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Classes" TO "anon";
GRANT ALL ON TABLE "public"."Classes" TO "authenticated";
GRANT ALL ON TABLE "public"."Classes" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Classes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Classes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Classes_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Courses" TO "anon";
GRANT ALL ON TABLE "public"."Courses" TO "authenticated";
GRANT ALL ON TABLE "public"."Courses" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Courses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Courses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Courses_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Locations" TO "anon";
GRANT ALL ON TABLE "public"."Locations" TO "authenticated";
GRANT ALL ON TABLE "public"."Locations" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Locations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Locations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Locations_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Staff" TO "anon";
GRANT ALL ON TABLE "public"."Staff" TO "authenticated";
GRANT ALL ON TABLE "public"."Staff" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Staff_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Staff_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Staff_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."StudentSubject" TO "anon";
GRANT ALL ON TABLE "public"."StudentSubject" TO "authenticated";
GRANT ALL ON TABLE "public"."StudentSubject" TO "service_role";



GRANT ALL ON TABLE "public"."Students" TO "anon";
GRANT ALL ON TABLE "public"."Students" TO "authenticated";
GRANT ALL ON TABLE "public"."Students" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Students_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Students_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Students_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Subjects" TO "anon";
GRANT ALL ON TABLE "public"."Subjects" TO "authenticated";
GRANT ALL ON TABLE "public"."Subjects" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Subjects_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Subjects_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Subjects_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Users" TO "anon";
GRANT ALL ON TABLE "public"."Users" TO "authenticated";
GRANT ALL ON TABLE "public"."Users" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Users_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Users_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Users_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
